import platform
from PIL import Image, ImageTk
from tkinter import Canvas, Frame, Scrollbar, Label, font
from fs.load_image import load_tk_image_from_bytes_array, load_image_object_from_bytes_array
from .ResizableCanvas import ResizableCanvas

back_image = b'\x89PNG\r\n\x1a\n\x00\x00\x00\rIHDR\x00\x00\x002\x00\x00\x002\x08\x06\x00\x00\x00\x1e?\x88\xb1\x00\x00\x01\x84iCCPICC Profile\x00\x00x\x9c}\x91=H\xc3@\x1c\xc5_[\xa5R*\x0ef\x10\xe9\x90\xa1:Y\x11\x15q\x94*\x16\xc1Bi+\xb4\xea`r\xe9\x174iHR\\\x1c\x05\xd7\x82\x83\x1f\x8bU\x07\x17g]\x1d\\\x05A\xf0\x03\xc4\xc9\xd1I\xd1EJ\xfc_Rh\x11\xe3\xc1q?\xde\xdd{\xdc\xbd\x03\xfc\xcd*S\xcd\x9e\t@\xd5,#\x9d\x88\x8b\xb9\xfc\xaa\x18|E\x08\x02\x02\x18GDb\xa6\x9e\xcc,f\xe19\xbe\xee\xe1\xe3\xeb]\x8cgy\x9f\xfbs\xf4+\x05\x93\x01>\x91x\x8e\xe9\x86E\xbcA<\xb3i\xe9\x9c\xf7\x89\x05V\x96\x14\xe2s\xe21\x83.H\xfc\xc8u\xd9\xe57\xce%\x87\xfd<S0\xb2\xe9yb\x81X,u\xb1\xdc\xc5\xacl\xa8\xc4\xd3\xc4QE\xd5(\xdf\x9fsY\xe1\xbc\xc5Y\xad\xd6Y\xfb\x9e\xfc\x85\xe1\x82\xb6\x92\xe1:\xcd\x08\x12XB\x12)\x88\x90QG\x05UX\x88\xd1\xaa\x91b"M\xfbq\x0f\xff\xb0\xe3O\x91K&W\x05\x8c\x1c\x0b\xa8A\x85\xe4\xf8\xc1\xff\xe0w\xb7fqj\xd2M\n\xc7\x81\xde\x17\xdb\xfe\x18\x01\x82\xbb@\xaba\xdb\xdf\xc7\xb6\xdd:\x01\x02\xcf\xc0\x95\xd6\xf1\xd7\x9a\xc0\xec\'\xe9\x8d\x8e\x16=\x02\x06\xb6\x81\x8b\xeb\x8e&\xef\x01\x97;\xc0\xd0\x93.\x19\x92#\x05h\xfa\x8bE\xe0\xfd\x8c\xbe)\x0f\x0c\xde\x02\xa15\xb7\xb7\xf6>N\x1f\x80,u\xb5|\x03\x1c\x1c\x02\xa3%\xca^\xf7xw_wo\xff\x9ei\xf7\xf7\x03\x95\x9fr\xb5o|U\x0b\x00\x00\x00\xf0IDATx\x9c\xed\x99K\x16\x840\x08\x04{\xe6\xfeW\xf69\xab\xec\xd4\x97\x00\xdd`\x86\xda\xfa-\t\tD\xa0i\x9a\xe6M|\x92\x9e{F\xbf\x83Z\xe4|8\xe6z\x97\xaf\xe7\xe2E\x9e$\xdc\xa8Df$\\\xa2\n\x11j$\x06l\x11\x89\x04\xc0\x15Y\x95(\x99\xec\xb2H\x0c\x18"\x16\t\xf72\x10-\x92"\x01\xc4\x8a\xa4I\x00q"\xa9\x12@\x8cH\xba\x040/rw\xdeax&\xa5\xbe\xf3\xdc\xb4D$\x06\xd6\xa1UJ\x02\xd0\x15\x8d\xf4v\xc1""-=faGD\xd6\xb8\xfdu\xf5\xbb\xfa\x95\xb7\xe8G\x06t\x19\xab\x88e\xec\x97\xed\xd9\xb3\xb6\x92.\xf1\x0e\xad2\xf9\x12\x91#%d\xa2\x92=]&r\xd6J\x95\x89\x9e~\xd3d\x94[\xa6w\x84\xc80DR\xd6\x18VD\xe4k\x0cshI\xf3\xa5\xcb\xf8\x05\xb6h\xac\x0632%7\xb1\xaf\xa0Ff\x9b\x9f\xa1M\xd34\xef\xe2\x07K\xdd\x1fI\x87\xc6\xc3\x9c\x00\x00\x00\x00IEND\xaeB`\x82'
notfound_image = b'\x89PNG\r\n\x1a\n\x00\x00\x00\rIHDR\x00\x00\x00\xfa\x00\x00\x00\x96\x08\x06\x00\x00\x00\xf7\xda\x95\x1c\x00\x00\x10\x87IDATx\x9c\xed\xdd\xcd\x8f$\xc9Y\xc7\xf1\xef\x13\x11\x99Y\xd5=\xaf\x1e\x8fw\xbd\xcbz%\x0b\x19c\xb4\x80-\x19\xd9B\x02!\x10\x12\xe2\xc0\xcd\x1c\xf9\x03,q\xf3_\x80\xb8\xc0\x05q\xe5\x82\xc4\x8d\x13G\x0e \xd9+\x8ce\xe4\x17l\x8c\x8c\xed\xb5\xc7\xde]\xcfL\xcf\xf4L\xbfUU\xbeDf<\x1c\xb2{m\x8bKG\x8e\x99q+\x9e\x8f4\x1a\xa9\xa5\xe8\xca\xae\xcc_ed\x1d~\x8f\xfc\xd9\x9f\xfe\x89\x92I\x10\xc6\xa9\xe3\xd6\x8d\x0f\xf3\xea\xcb\xbfM\x8c[D\xdc\xa5\xd7\x07\xe0\x18\xe5\xcfe\x8fW\x08(\x8a\xe4\x1c\xc0\x98\xe0\xd6\n>\xf7;\xd0Fp9\xab#\xa4W`\xfd\xd7\xd0\xfc\x15\xf0\xca\xfc\xb3KR\xf5\x88\x9c\xf1\xe5\xff\xf8;\xba\xee\xfd8w\xf9\xb5\x00\xe3\x94\xb8}}\xcdo\xfe\xeak\xa4a\xc4I\xd6_\xfe\xf3\xf1\xbd7\xf3\xd7\x88\xc08\xc0\xadW\xe1\x97~\x03b\x0b\x19\xe7\xdc\xbcXv\xa6\x8c)\x80\x05\xdd\x98\x02X\xd0\x8d)\x80\x05\xdd\x98\x02X\xd0\x8d)\x80\x05\xdd\x98\x02X\xd0\x8d)\x80\x05\xdd\x98\x02X\xd0\x8d)\x80\x05\xdd\x98\x02X\xd0\x8d)\x80\x05\xdd\x98\x02X\xd0\x8d)\x80\x05\xdd\x98\x02X\xd0\x8d)\x80\x05\xdd\x98\x02X\xd0\x8d)\x80\x05\xdd\x98\x02X\xd0\x8d)\x80\x05\xdd\x98\x02X\xd0\x8d)\x80\x05\xdd\x98\x02\x84&\xe4/\x12\xc0\x8bR\x07Opk\xd4\x8f\x88\xf8K\xaf\xf7@@\xc1\xed3\x97?\xe76N\'\xf0+\x90\x9b q\xae"\xbe\xb4\x08\xce\x81\xac\xdf;\x92\xbc\xd7\x9f\xd7TM \x11p.\xef\xd8}JT\xb5\xcf\xff\x93\x7f\x9e\xd6\x0b\xd7\xa5\x04U\r\xe9\x16\xe8\x1ey\xf7\t\x05<\xc8\x11s\xbd\xf6\x0b\xa8\xb9~V\xd5\xe5\xaf\xf1\xffK@\x97\xdeW\x05\xa6\x08:\xb1\xf4}\x0bG\xdb\xfc\x85"B\x1c=\x84\x9e[\xfd\x01Cl\xb3z\xdd=\xb0C\xd9p\xca\x80\xd0\x91w\xf82&\xc6z\xc5\xfd\xf4]\xfc\x14Q\xbd\xfcja$\xf2\x12/\xb7\x0fy\x7f\xd7\xa3l\x11\xc6\xcb\xbf\xb8z\xa8v\x9c>\xd9\xd2v\xeb\xac^w\x01\xe2\x98p\xb7\x98\xbb\xe8\x95\x17s\xbd?Z\xb0F\x80!\xc0KG\xf0\xea\xd7!\xe5\xf6\xe9\x0b0Bz\x15X\x01i\xc1A\xbcX\xed\xb6C\x17|@\xcf\x1fq\xcaJ2\xae\xb3\x9f\xf9\x05\nU\x03\xbeb\xd1\x01\x00\xe1\x9bo\xe7\x7f\xca\x88\xc0\x10\x1b^\xbds\xc4\xba\xfa"\xed\xa0Y\xe7\xdc\xa1\xec\xf0|u:\xe2]\x8d\x0cH\xd6\xf5\x1eF\xe5i_\xf1\xb9\xf8_\\\xeb\'&\x7f\xf9\xd5\x95N\xbc\xdb\xdc\xe0/\xbe\xff&\x9f\xfd\xc1)c\x13\xa9t\xba\xf4zU\x8f\x84\x96\xef|\xf3\x1dNc\x8b\x97\x8c\xa0\x8b\xd0u\x91\xd7_\xbf\xc3\xa7>\xfd\x11\xb4\x1dx!I\xff\xe2\x82\x90\xb9\x04g\xfb\xf0\xc9\xff\x84_\xffK\xe0\x06\x84\xcb\xbfoP\x81<\x86\xdd\xdf\xc0\xf8\x06\xc8\x96\xabrWWU\xc4{\xbe\xf7\xce!}\xcc\x1f\xba1!\xdcp\x03\x1fm\x1e\xcf\xd7O\xcevN\x1c\xc4\x0e^\xfe(\xdcx\t\xa6e\xd7\xcc\xc2;:\xf4\xd1qm=\xd0v\'\xec\x06\xc9\x0ez+\x81\xa7\xc3\x03D;".\xeb\xd0\xab\xa8\x1c\xae\x02?\x9a&\xfc41e\xac\xaeSb\xa8\xf78<{\x04\x0f@\xf7\xfayKzY\xea!\xc0\xc9\xe1\x8e\xe3\xb8%d\x06\xbdm\x07\xee\xdc\xdc\x03\'K?\x9c\x9f\xdd\x92;\xba\x03N\x02\x9c\x1d\x01_\x06w\x17\\\xce\x1d\xaa\x06\xee\x03;\xe6=\xdd\x8b\xda\xce,$p\xb2\xed\xe8\xfa\x11\x97q\xb1\x0b\x10\xd5!\xbe\x85\xe9\x08\xd5\x90\x1f\xf4a7\x07\\\x96\xef\x02\x97=\xa3\x0b\xa0J\xed=\xc1\xaf\t>o\x17\xe7P<\x9e&\xec\xb1V\x8f\xcf\r:J\x13\xc2\xf93\xfa\x94\xf7\x8c.\t\xd8\x9f\xb7B{\xcc\xcf\xab978\x05\x02\xd4+O\xed\x03A.\x7f\xd2D\x84\x89D\xb8\x8a\xcf\xe8\x0e\x88\t\xea\x06\xb8\x0b\xdc\x81\x9cG\x1ej``\xd9w2\xbf\x18\xea\xe0I\xaa\xd9wtQG\xe5\x03\x84\x1a4\xf3\xef\x177?\x9b\x8b[\xbcm\x07\xfb\xd6\xdd\x98"X\xd0\x8d)\x80\x05\xdd\x98\x02X\xd0\x8d)\x80\x05\xdd\x98\x02X\xd0\x8d)\x80\x05\xdd\x98\x02X\xd0\x8d)\x80\x05\xdd\x98\x02X\xd0\x8d)\x80\x05\xdd\x98\x02X\xd0\x8d)\x80\x05\xdd\x98\x02X\xd0\x8d)\x80\x05\xdd\x98\x02X\xd0\x8d)\x80\x05\xdd\x98\x02X\xd0\x8d)\x80\x05\xdd\x98\x02X\xd0\x8d)@\xf0a\x95\xbdH\x04\xbc\nU\x884adJ\xb9-\xb0\x90\x10*I\x04\x9dP4\xbb\x1c2\xd4\x02{\x02I \xa3\xee\x99t\xben-\xd0\x90_1~^\x0e\xe9CC\x98V\x04w\xf9R\x7f\x11\xa1r\x9e\x10\x1ap\x0e\xa9<\x84\xcc\xcfZ\x01\xc6\x04\xe9\x19\n\x16\xaf-h\x87ti\x1e\xda\xb0j\x98\x0b\x1es[E\x03\xe0@o\x81\xee\x03\x15\x8b\xee3Y\xcd\xb3?E\x1d\x84\x1d\x84m\xfe \x05U\x08B\xb5\n$Ov9\xa4WG\xe5\xfd\\\xca\x99{\xda\x04\x08\nu\x80\xd0\x9c\xfflA\xdds\xb7}\x9c\xbdh\xeeuW6\xab\x8a\xa7\xdbfA\xaf\xfb\\\xfa{6\xd6\xacU\xb2{\xdd\xabQ\xd9\xd6\x1e\x1e$\xd8(\xf8\x8cw/%XO\xf4\x07\x1e\x0e\xe1l\xbd\xa2\xce\xa8{N\xeaY\xfb-\xbb\xf6\x88]\x84\x90Q\xca/"t\xfd\xc0\xaeu\xd0\xf6\xec6\x1d>3\xe8\xaaJS\x07\x82w\xcb\xcbT\x7ft\x90\xbf\xc6%8\xd9\xc1\x87\x9e\x02-\x9c\xee \xe4\x84.\x02\x03\xb8oC\xa8\x80\xfc^\xf7\x11\xe1\xbbc\xfd^Y\xf4\xe5\t*#\xd5\xee6a\xb8\x85\xca\x98\xf5\xda\xaa\x8a\x0f\x81\xa3\xc3\x1d1F$#h\x02D\x04\xe7\x06hdY\xd0\x07\x07\xfb;\xa8\x8e \x0e\xcb\x82\xfe\xe4\x9d/e/\x12\x11\xc6\xd8\x93v\x1f"\x85O\x12\x87]\xf6\xa4\x96\x8d\xc0/\x0f\xb7\xe8T\xe9\xc9;\xe5a\x82\xa3#\xe0_"\xda\x92ucPUhz\xde\xb9w\x9b\xaf\xfe\xe0c<h*\xaa\x8c\x1a\xdd\x84\xd00\xf2\xe3\xe9[l\xa9\xf0\x19gND\xe8\xbb\x8ej\xfd:\xdf\xbe\xf7I\xceNO\xf1\xfe\xf2;\x02\'B\x17G~\xe5\xb5\xbb\xbc\xef\xf65tLy\xe7\\\x98w/\xff\xf4\x85\xf9\xff\x9c\xb5^\xe1h\rg\xdf\x857\x9e\xc0\xc1\x0e\xaa\x8c\x01\x0e\xce\xc1\xae\x83?\xf8[x\xdfm\x98\xc6\xcc\xf1<\xca\xf1T\xf1\x87O>\xc2m\x99\x183\x16\x8bzb\xfd\x94\xbb\xf7?\xc3\xdd\xb7\xff\x98X\xf7\x88f\xec\xc44\x11C\xcd\xef}\xe5\x01\xab~K\xca\xd9\xc5\x01\x1d\xf0:\xc2\xa7\\@\xc9\x19z\xc1\xfc\x01\xbb\xf50\xbd\x0b\xd3\x01t\xba\xac\xd7=\xf6g\xf9\xabD@\x95\xb6\xebx\xbaq\x8cQ\xb2>\xe5<p&p\xd6\xd7lT\x16\x05}\x87\xc2\xfd8\xbf\x8b\xd9A\x1f\xd9\x1d\xd4\x1c<\xbe\xc9a\xe3\t\x19AW\xa0Re\xbbwD+\x92\xb5\xf9\x14\x11\xfa\xbee\xdb\xdd\xe0x\xd3s\xb6i\xf1\xfe\xf2[`\xe7\x84]\x17\x19\xc6\xe9\xbcH\x7fa\x9b\xff\x93\x83\xfc;\x8bSH\r\x1c\x1e\xc1\x01p\xd0C\x95\xf1\xcc\xe3\x05\xce\x80\xf1\x7f\x80j\xfe}\x97<\xf4\xf9\xafL\x8c\xae\xe1\xc7\xa3\xf0\xc8\x8d\xc4\x9c\xbf;UP=\xe0\xfe\xf6\x88k\x87\x90\xd6\x0eR\xc6\xfb\xae\x89.\xc0\x1b\x87-\xd7\xfb-Sf\xd0[\x94;\x04\xe0&\x9a;\x8a\xea",\'[h\x15Z\x96\x05=\x7f\xc9O8\x81\xa6\x9a?\xecs\xee,\x1e\x18\x04\xaa\x94\xa84\xff\xe6\x12\xdc\xf9\xeeoO\xe6\x90\xe7\xce\xfak\x1ca\x9dX\xaf\x06VM\xc8\x0ezM"\x84\x86\x80\xc7e\xde\xd1\'\x07\xc17\xd4\x95\xa7\xaeB\xf6\x1d}\xaa\x13\xde-\xd8\x02\xfe\x8c\x05\xcf\xe8\xa2\xc0\n|\xfd\x93\xc1\x17U\xc6z\x0fL\x80\xbb\xc9\xfc\x0br\xc7B\xe9\xfc\x82\xee&dn\xbd\xc5\x05\x94\x8e\xfd\xb0\xe2\xa5\x15\xc4Z\xc8\x98\xbb\x81S\xe8\x024+O-!;\xe8\x13J \x90\xf5\xa2\x17<\xf3\x9c\x8c:@\x909\xb1\x0b\x82n\xdf\xba\x1bS\x00\x0b\xba1\x05\xb0\xa0\x1bS\x00\x0b\xba1\x05\xb0\xa0\x1bS\x00\x0b\xba1\x05\xb0\xa0\x1bS\x00\x0b\xba1\x05\xb0\xa0\x1bS\x00\x0b\xba1\x05\xb0\xa0\x1bS\x00\x0b\xba1\x05\xb0\xa0\x1bS\x00\x0b\xba1\x05\xb0\xa0\x1bS\x00\x0b\xba1\x05\xb0\xa0\x1bS\x00\x0b\xba1\x05\xb0\xa0\x1bS\x00\x0b\xba1\x05XT\x0e\xf9^\xff\xa8\xf3\x84\xb0F\xd3\x88\xc8\xe5\x0b\xf3<s\xb1\xe4~\x82\xeb\n5\x99\xe5\x90\x02c\xa5\xb0\xde\xcd\xed\xb3\xd9\xe5\x90\xe0\x9aDUMT\x95d\x96C\n\x15\x13M\x98\xfb<\xf3Z`\x81\xa04\x15\xd4\xab@=\xf8\xbc\x16X\x11\x92S\\\x1d\xa0:o7\xcfi\xe5\xbc\xa8{^\xd4,\xa9\xf3?\xaf\xf3\xd0\x8b\x15y\xe5\x90\x8e\xf3rH\x7f\xbe0\xb3\xf6\x18\x05\ts!\xa8\x08YWL\x9a\x07v\xb8f~\xdb\xb4\x02\xc9\xe8\xa6t\n!@\xf0+\x82\x1f\x91\xccr\xc8\xea\xa2\x1c\xd2\xed#\xb9\xef\xbdg\xbe\xe0\x9b\x1e\xd6\xe7\xa5\x98\xcf\xab\x05\xf6\xe2P\xa7\xb1\xa7\xdd\x1c0\xc6\xbc^w\xc7\\\xe7\xff\xe3\x11\xa2\xc2@f\xc5\xf8\x04gN\xe0`\x9f\xd0).#mAa\xac\x95\xe9i\xe0t\xbbf\x13\xf3\xeb\x9ek\x94\xa3\xca\xd1\xb2\xa4\xee\xd9\xb1w\xa6\x1c?\xdepv\xb6\xcbk\x81uB\xdbE6\xefk\xb9\xb1\xaa\x19\x861\xabf\xfb"\xe8\xbb\xda\xe5W\xef:E\'\xc1O\x81\xfa!\xe8\xe1\nB^\xdd\xb3n&\xf6O\x06\xfc\xde\x16\xfa\x94\xd9\xeb\x9e`j\xe6\xa1\x1d.\xf3\xe05A\r\xf1\xe8\x94m\xb7%\xa6CDs\xeb\x9e\x1bv\xddc\xdc\x82\xba\xe7\x0e\xd8"(\xc7\x9c\xa1\\~5\xe0\x04m\'\xd6G7\xa9\x0e\xd6\xd0e\xbeo\xe7\x96\xd5=\x9f\x07c\xd8\x1e\xf2\xf8\x87\x9f\x9f\xbb\xd2s\x7f\x05\xf0\xcf:\x1f@\xf6\xea\x94\xa0Y\xf3\xf2\xbf\xfe>\x8c1\xeb\xae\xe6\x81\x13\x11\x86~\x9f\xb7\xba\x86\x13\x91\xac7>1\xdf\xcc\xbeU\x056\x02>\xa7vX\x84~\x08<\xed#o|\xf9\x87\x9c\xedv\xf8\x8cO)\xe7\x84v7P\xe18\xedz\xfa>oj\xc8\x85\x7f\x7f9\xff\xb4\x8b(c/\xdc\x1ao\xf1\xda\xe7?Fl+\xc4]\xfe\xcc9\xa7\xb4\xbb\x8a\xdf\xbd\xf3}n~\xe0!:\xb8\xcc\xe1\x13\t\xc65\xdc\xd7\xf9\x93^3&\xad\x90@\xf68\x89o\xb2\x1d\xbe\x99=\xa9e\xae{\x16\x1e>>\xe6\xda01eNj\x19\x10D#oNG\xec2+\xc2\x9dxv\xc3)\xbf\xf5\x8d?\xe2\x83\xef\xfe\x1a\x1a\xb7Y7\xd5\x0b\xcf\xd4\xeb\x9eRd\xe8\xe2\xe2\xf5G\xcf\xf0\xda^\'^\x7f(L\x93f]\xec\x0e\xd8CI\x1a8\xd5\x8a-y\xdb\xef\xc4\\\xb3}TO\xe7A\xbf<\x11\xa1\x8f\x8e\xfd\x8b;z\xdb\xe6\x07};p|\xd2rm\xdb\xd1w\xcb\x82~o/\xffB\x11\x99\xfb\xd0?@\xcd\xde\xc3\x1b\xf41 \x19=\xe5\xde%6\xbb\x15\xf1 \x81\x8e\xf9\xdb8a\xfeP\x7f\x90\xc0\xa7\xac\xa0\x03\xa0\x9e)\x1c0\x85{\xd9\xb3\xd7\xdc\xf9\xbc\xbd][\xe3\xa20en\xa2"\x8e3\xedx4<\xa0\x95\x90\x15t/\x81\xb3\xf8\x94\xfe\xe9\x0eF7_|\xcf{\x80\xc3\x0b%0\xed\x9dO\xf6\xc9\xd9\xc5\x01\xa3\x80\x8c\x89z\x84*\xf3\x11?1?a6\x01bv\xd0\xe7_\xd0T2?\xa3k\xc8\x0e\xfa4%\xea\xdaSW\x1e\x9d\xd2\xa2\xa0_\x1f\xf3w`"\x10#\xec\x93h\xd6\x11\xf1\x9a\x15t\xe7\x12Sr\xb8\xb5\xce\xc3\x1f<\x0b\x82\xce\xfc\x8c\xee\xc9\x0f:\xca\xfc\xc2\x0b\x86W\x9c\x07=\x84DHK\xbe\x16qT*\xac\xabkh\xe6\x1d\xdd\x8b\'\xea\x80o\x02\xacuq\xd0\xed[wc\n`A7\xa6\x00\x16tc\n`A7\xa6\x00\x16tc\n`A7\xa6\x00\x16tc\n`A7\xa6\x00\x16tc\n`A7\xa6\x00\x16tc\n`A7\xa6\x00\x16tc\n`A7\xa6\x00\x16tc\n`A7\xa6\x00\x16tc\n`A7\xa6\x00\x16tc\n`A7\xa6\x00W\xb7\x1c\x12\xc1\x875 Y\xf5\xb7\x17\xc3#V\xc0\r\xe6\x8e\xc1\xdc\xba\xe75s\xa1\xbf_\xd0\x02\xeb\xd5\xe3\xc3\xea|\x18\x80f\x97C\x06\xef\xa9\xea\x8az\xe5Q\xf2\x1ap/\\\x0f\xab\xec5"\xca\xa8\x15{\xa1%T\x11U\xc9,\x87T\xaajB\x9a\xf3\x01\x10\x8ee\xe5\x90\x17\xc5\x92KfP,u^\x0eY\x07h&\x982n\x8f\xc2\xfc\xa76\xaa\x04\x19\xa9 \xb3\xeeY\xa8\x89H\xa8!\\\x9b\x0f\xe6y\xd7=\xbfH\xaa\x89vs\x80Ny\xbd\xee\x8e\xb9\xbd\xf5\xf1\x04o\x8d\xb0]\xd0\x02\xdb\x00\xbb\nzr\'\xb5\x08\xfd\x10\xe9\xd6\xca\xae?d\xd7-\xa8{\xee\x07N\x8for\xf4\xb8aX\xd8\xeb~o\xf78{\x8d\x08\x0cQ\xf8\xe06rgs\x8dv\x10\\\xc6K;\xa7\xec\xda\x9a\xb3\'+\xd6n`\x18\xfc\xa5O\x9b\x02+Il\xc7\x06\x0e\x94\xe0\xe5\xb9\x06]\x14\x86\x00\'\x1b!\xc6y\xf0\xcb\xa5\xd727[\x07\xf5l\xc7\xf5\xa2^\xf7m\xbc\xcefw\xccP\xff\x90nl\x17\x9d\xf3+\x1b\xf4\x94\x06\x0e\x7f\xf4o,9\xe3\t\xf8\n\xf0\xdfz>\xa1(\x93\x00\'\x0b\xae5\x11a\x18\x06\x9a\xe1\x03<||={\x80\x83\x88c\x88;\xde\xfa\xb6\xf2\xf4\xc1@\x1c\xfbE\'\xfd\x1f\x1f|){\x8d\x13a3\xf6|\xa2{\x8d\xf7\xbb\x8fs\x1c[|\xc6\x9dED\x19\x86\xc0W\xbe\xf6an\xdch\x99rn\x8b@%\xcaa\xac\xb8\xf1\x16\\\xf7\x8e)\xbb\xee\xf9\xd9(\xf0\x9dA\xc9\xd8\xc4\x00\xf3\xb5\xd2\x03\xafh\xc5G\x87\xbb\xd9\xb3\x00\x9c@7\xdc\xe6\xeb\xee[\xdc\xef\xbe\xc1\x10%o\xf0\xc5\xb9+\x1btT\x89\xfd\xe9\xe2\xe5g\xe7\xff\x9e\'\x11\x01U\x86\xfe\x84m\xf78\xfb\x8e.\xe2\x88\xe3\x96\xd3\xe3S$\xee\x18S\x87,(\xf9>\x1c\xf2\xffr\'BR\xe5i7\xb0\xdd\xecs\x16\x13!c\xde\x9e\x88\x12c\xe0\xc9\x93k\xf4}\xc8\x0ez\x10\xe58z\xf6\x0e\x94\xc6\x0b\xe9yn\xdd9\xffp\xaf\xb2\'\xa7\xbd\x17\xf4=ul\xfbj\xc1\xd0\x0fe\x18j\x9en\xef!\xeb\'\xc4Xe=2]\xb8\xbaA\xbf\xc2D\x1c!\xac\tN\xf1>/\xe8\x9a\xa6\xf9\x19}\x1dpSX\x14\xf4g1?k\x8fT$B\xce\x16V\x14\x10\x9a&\xb2Z\xc5EAo\xbc2\xae\x85\xe4\xd3s\xbf\xa3\xc3<\x0c4\xd7\xc5Q6\xaaTi\xa2Z\x10t\xd5H\x13jV\xe1\x1a^/\xff\xc8\xf3\xd3\xec[wc\n`A7\xa6\x00\x16tc\n`A7\xa6\x00\x16tc\n`A7\xa6\x00\x16tc\n`A7\xa6\x00\x16tc\n`A7\xa6\x00\x16tc\n`A7\xa6\x00\x16tc\n`A7\xa6\x00\x16tc\n`A7\xa6\x00\x16tc\n`A7\xa6\x00\x16tc\n`A7\xa6\x00V\x0e\xf9\x028`\x15 \x06\xf0\x19M\x81"\x82C\xa9|E\xf0\xeb\xf9g\xcf\xb9\x1c\xb2\x12\xcf\xcdjM\xd41\xbf\x056U4\x15\x84j\xc2\xb9\xbc&\xd3 J\xc0\xe1\xc3\n\xef\xa7y\xf2\xc6\x15 \xcce\x90\x95\xc2\x8d4\xff \xb7\x1c2\xa6\x9aU%\x84jd\x1eXb-\xb0W\xc2\x98\xe0\xc9F\xd8\xed\x04\x971\x05a\x1e\xa2\x10\xb8~}C]?Z\xdc\xeb\xbe\xc8\xf9\xb5\xb5\x99z\xbe\xb7=\xe0$\xee\xb2z\xdd\x9d@\x17\x85\xdb[\x01Y3Ny\xc7\x1d\x04\xb6Q\xe8\xb6\x8f\x08^\x99\x9es\xdd\xf3R\x17\x03\x1cNu\x1e\x18\xb2#o\x1b\xed\x04\xdaAXo\x13\xf5j\xbf\xc0^\xf7+H\xcf/\xce\xdd\x00_\xbb\xe7\x88\x83\xcb\x1a\'5\x9f\xf4\x15*? \xc6\xb7\x19\xa2.:\xe9K\xa4\xf3\xa4\xbf\xdd\x1e\xf2\xf7\xef~\x9eI5k/\xe1\xc5q\x1a;\xd6\xebO\xf3\xfa\xde]\xba\x14\xb3v#A\x1c\xc7\xb1\xe3\xe4\x9d/\xd0\xf9\x8a\xa4W$\xe9\xcc\x9f\x91[\xe0\x1f4\x7f\xe8\x87\x17\xc7ql\xf9L\xf5q>q\xf6\x1a\x9b\xb1\xc7\x954\xa9\xe5*\x9b&\xe1\xc9F\x98\xa2d\xdd\x91\x9d\xc0npl\xda3\xda.\xd2/\xfct\x7f\x16}\x8a<\xeac\xf6\xba \x8eQ\x13\xa7\xdb\xc0&\xad\xe9\x92\xcf\x0c\xbag;&\x88-q\xecI\xbad\xc6\xce\x8b3\x02\xdd\x82uA<\xa3N\x9c\xee\x84m\xd8c3\x8a\x05\xfd\xaa\x10\x99\x9f\xd1G\xcd\x1a\x1b\x87\x13\x98\x92R\x85\x8a\xe0\x03S\xca[\xff\x8b \x84\x89\xba\x9a\x98\xd2\x94\x19t\x08L\xff\x8fG\xf6\x8bj\xde\x03x\x9f\xe6\xc1\x192-\n\xba}\xebnL\x01,\xe8\xc6\x14\xc0\x82nL\x01,\xe8\xc6\x14\xc0\x82nL\x01,\xe8\xc6\x14\xc0\x82nL\x01,\xe8\xc6\x14\xc0\x82nL\x01,\xe8\xc6\x14\xc0\x82nL\x01,\xe8\xc6\x14\xc0\x82nL\x01,\xe8\xc6\x14\xc0\x82nL\x01,\xe8\xc6\x14\xc0\x82nL\x01,\xe8\xc6\x14\xc0\x82nL\x01,\xe8\xc6\x14\xc0\x82nL\x01,\xe8\xc6\x14\xe0\x7f\x01I\xbd-\xfa\xad\x8e\x87^\x00\x00\x00\x00IEND\xaeB`\x82'
column_width = 320
canvas_items_offset = 5

class DetailPage(Frame):
	def __init__(self, controller, repo, package, *args, **kwargs):
		Frame.__init__(self, *args, **kwargs)
		self.controller = controller
		self.repo = repo
		self.package = package

		self.TITLE = font.Font(size = 22, weight = "bold")
		self.HEADER = font.Font(size = 16, weight = "bold")
		self.BOLD = font.Font(size = 12, weight = "bold")
		self.REGULAR = font.Font(size = 12)


		self.banner_image = self.repo.getScreenImage(self.package["name"])
		self.banner_image = Image.open(self.banner_image) if self.banner_image else load_image_object_from_bytes_array(notfound_image)
		self.resized_banner_image = None


		self.back_button_reference = None
		self.back_image = load_image_object_from_bytes_array(back_image)
		self.back_button = ImageTk.PhotoImage(self.back_image)

		self.container = canvas_container = Frame(self)
		canvas_container.place(relwidth = 1, relheight = 1, width = -column_width)
		
		self.canvas_width, self.canvas_height = 1,1
		self.canvas = ResizableCanvas(canvas_container, relief="sunken", background = "#333333")
		self.canvas.config(width = self.canvas_width, height = self.canvas_height, highlightthickness=0)
		self.scrollbar = Scrollbar(canvas_container)
		self.scrollbar.config(command=self.on_scroll_bar)      
		self.canvas.config(yscrollcommand=self.scrollbar.set) 
		self.scrollbar.pack(side="right", fill="y")
		self.canvas.pack(side = "right", expand=True, fill="both")
		self.canvas.bind("<MouseWheel>", self._on_mouse_wheel)
		self.canvas.config(scrollregion=(0,0, self.canvas_height, self.canvas_height))

		self.canvas.pack(fill = "both", expand = True)
		self.canvas_width, self.canvas_height = self.canvas.winfo_width(), self.canvas.winfo_height()

		# self.canvas.bind("<Enter>", self.mouse_enter)
		# self.canvas.bind("<Leave>", self.mouse_leave)
		self.canvas.bind("<Motion>", self.mouse_move)
		self.canvas.bind("<Button-1>", self.on_click)
		self.canvas.bind("<Configure>", self.on_configure)
		self.bind("<MouseWheel>", self._on_mouse_wheel)

		def construct():
			#RIGHT COLUMN
			self.column = Frame(self, background ="#333333")
			self.column.place(relx = 1, x = - column_width, width = column_width, relheight = 1)

			self.column_body = Frame(self.column, background ="#333333")
			self.column_body.place(relwidth=1, relheight=1)

			self.column_title = Label(self.column_body, anchor="w", font=font.Font(size = 10, weight = "bold"), background ="#333333", foreground = "#CCCCCC")
			self.column_author = Label(self.column_body, anchor="w", font=font.Font(size = 10), background ="#333333", foreground = "#CCCCCC")
			self.column_version = Label(self.column_body, anchor="w", font=font.Font(size = 10), background ="#333333", foreground = "#CCCCCC")
			self.column_license = Label(self.column_body, anchor="w", font=font.Font(size = 10), background ="#333333", foreground = "#CCCCCC")
			self.column_package = Label(self.column_body, anchor="w", font=font.Font(size = 10), background ="#333333", foreground = "#CCCCCC")
			self.column_downloads = Label(self.column_body, anchor="w", font=font.Font(size = 10), background ="#333333", foreground = "#CCCCCC")
			self.column_updated = Label(self.column_body, anchor="w", font=font.Font(size = 10), background ="#333333", foreground = "#CCCCCC")
			column_labels = [self.column_title, self.column_author, self.column_version, self.column_license, self.column_package, self.column_downloads, self.column_updated]
			for l in column_labels:
				l.pack(side = "top", padx = 4, pady = (0,4), fill = "x", expand = False)

			self.column_title.configure(text = "Title: {}".format(package["title"]))
			self.column_author.configure(text = "Author: {}".format(package["author"]))
			self.column_version.configure(text = "Latest Version: {}".format(package["version"]))
			try: self.column_license.configure(text = "License: {}".format(package["license"]))
			except: self.column_license.configure(text = "License: N/A")
			self.column_package.configure(text = "Package: {}".format(package["name"]))

			ttl_dl = 0
			try: ttl_dl += package["web_dls"]
			except: pass
			try: ttl_dl += package["app_dls"]
			except: pass

			self.column_downloads.configure(text = "Downloads: {}".format(ttl_dl))
			self.column_updated.configure(text = "Updated: {}".format(package["updated"]))

		self.controller.threader.do(construct)

		self.refresh()


	def refresh(self, event = None):
		self.canvas.delete("all")
		
		#Resize image
		totalheight = 0
		frameheight = self.container.winfo_height()
		framewidth = self.canvas.winfo_width()
		if framewidth < 5 + 2 * canvas_items_offset:
			print("Failed")
			return
		picwidth = framewidth - 2 * canvas_items_offset
		wpercent = (picwidth/float(self.banner_image.size[0]))
		hsize = int((float(self.banner_image.size[1])*float(wpercent)))
		b_image = self.banner_image.resize((picwidth,hsize), Image.ANTIALIAS)
		self.resized_banner_image = ImageTk.PhotoImage(b_image)
		
		#Create image
		self.canvas.create_image(canvas_items_offset, canvas_items_offset, anchor = "nw", image = self.resized_banner_image)
		totalheight += b_image.size[1] + 2 * canvas_items_offset
		self.update_overhead()
		
		#Create separator line
		self.canvas.create_line(2 * canvas_items_offset, totalheight + canvas_items_offset, framewidth - 2 * canvas_items_offset, totalheight + canvas_items_offset, width = 4),
		totalheight += 2 * canvas_items_offset

		#Description label
		r = self.canvas.create_text(
			canvas_items_offset,
			totalheight + canvas_items_offset,
			anchor = "nw",
			text = "Description:",
			width = framewidth - 4 * canvas_items_offset,
			fill = "#CCCCCC",
			font = self.HEADER,
		)
		bbox = self.canvas.bbox(r)
		totalheight += (bbox[3] - bbox[1]) + canvas_items_offset
		
		desc = self.package["description"].strip().replace("\\n", "\n")
		#Description
		r = self.canvas.create_text(
			canvas_items_offset,
			totalheight + canvas_items_offset,
			anchor = "nw",
			text = desc,
			width = framewidth - 4 * canvas_items_offset,
			fill = "#CCCCCC",
			font = self.REGULAR,
		)
		bbox = self.canvas.bbox(r)
		totalheight += (bbox[3] - bbox[1]) + 2 * canvas_items_offset

		#Details label
		r = self.canvas.create_text(
			canvas_items_offset,
			totalheight + canvas_items_offset,
			anchor = "nw",
			text = "Details:",
			width = framewidth - 4 * canvas_items_offset,
			fill = "#CCCCCC",
			font = self.HEADER,
		)
		bbox = self.canvas.bbox(r)
		totalheight += (bbox[3] - bbox[1]) + canvas_items_offset
		
		deets = self.package["details"].strip().replace("\\n", "\n")
		#Details
		r = self.canvas.create_text(
			canvas_items_offset,
			totalheight + canvas_items_offset,
			anchor = "nw",
			text = deets,
			width = framewidth - 4 * canvas_items_offset,
			fill = "#CCCCCC",
			font = self.REGULAR,
		)
		bbox = self.canvas.bbox(r)
		totalheight += (bbox[3] - bbox[1]) + canvas_items_offset




		height = totalheight if totalheight > frameheight else frameheight
		self.canvas_height = height
		self.canvas.config(scrollregion=(0,0, framewidth, self.canvas_height))

	def on_configure(self, event = None):
		self.refresh()
		print("Configured canvas")

	def _on_mouse_wheel(self, event):
		if platform.system() == 'Windows':
			self.canvas.yview_scroll(-1 * int(event.delta / 120), 'units')
		elif platform.system() == 'Darwin':
			self.canvas.yview_scroll(-1 * int(event.delta), 'units')
		else:
			if event.num == 4:
				self.canvas.yview_scroll(-1, 'units')
			elif event.num == 5:
				self.canvas.yview_scroll(1, 'units')
		self.update_overhead()

	def on_scroll_bar(self, move_type, move_units, __ = None):
		if move_type == "moveto": self.canvas.yview("moveto", move_units)
		self.update_overhead()

	def update_overhead(self):
		self.canvas.delete(self.back_button_reference)
		self.back_button_reference = self.canvas.create_image(10, float(self.canvas.yview()[0] * self.canvas_height) + 10, anchor = "nw", image = self.back_button)

	def exit(self):
		self.destroy() #destroy window

	# def mouse_enter(self, event): pass
	# def mouse_leave(self, event): pass

	def on_click(self, event):
		y = int(event.y + (float(self.canvas.yview()[0]) * self.canvas_height))
		x = event.x

		#Check back button
		left_bound = 10
		right_bound = left_bound + self.back_image.size[0]
		top_bound = float(self.canvas.yview()[0] * self.canvas_height) + 10
		bottom_bound = top_bound + self.back_image.size[1]
		if x > left_bound and x < right_bound:
			if y > top_bound and y < bottom_bound:
				self.exit()
				return

	def mouse_move(self, event):
		self.update_overhead() #Don't let overhead icons get overwritten